{"version":2,"kind":"Notebook","sha256":"f66bf783c3059623b2ba57d6c6bf26f426b24a915d4fa97b109cc0a9541f1b7a","slug":"notebooks.cesm2-lens2-aws","location":"/notebooks/CESM2_LENS2_AWS.ipynb","dependencies":[],"frontmatter":{"title":"CESM2 LENS2 on AWS","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/climate-variability-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/climate-variability-cookbook/blob/HEAD/notebooks/CESM2_LENS2_AWS.ipynb","exports":[{"format":"ipynb","filename":"CESM2_LENS2_AWS.ipynb","url":"/climate-variability-cookbook/_preview/11/build/CESM2_LENS2_AWS-34516290e20c59f5231a21e81033f1b9.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Display output of plots directly in Notebook\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport intake\nimport numpy as np\nimport pandas as pd\nimport xarray as xr","key":"uqnOSvT78l"},{"type":"output","id":"GWr69dY5V5sj5mokKKqAe","data":[],"key":"I3e0sAqnZx"}],"key":"BqXQyOAUVu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog = intake.open_esm_datastore(\n    'https://raw.githubusercontent.com/NCAR/cesm2-le-aws/main/intake-catalogs/aws-cesm2-le.json'\n)\ncatalog","key":"Q74ZN4AgYx"},{"type":"output","id":"OV9_pEdpge0VSawI-Kevc","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>aws-cesm2-le catalog with 40 dataset(s) from 322 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>variable</th>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>long_name</th>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>component</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>experiment</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>forcing_variant</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>frequency</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>vertical_levels</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>spatial_domain</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>units</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>start_time</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>end_time</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>path</th>\n      <td>313</td>\n    </tr>\n    <tr>\n      <th>derived_variable</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"SxUR8y3YXF"}],"key":"sJnc6YAYRL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog.df.to_csv('namelist.csv')\n","key":"VkC9Q9cCVr"},{"type":"output","id":"CxBUHDyi8DLmxCQxo0CRG","data":[],"key":"cpm4skxowO"}],"key":"ZujI5StAlF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog = intake.open_esm_datastore(\n    'https://ncar-cesm-lens.s3-us-west-2.amazonaws.com/catalogs/aws-cesm1-le.json'\n)\ncatalog","key":"xQBv4pwr3E"},{"type":"output","id":"kKq7nkcKsKxw23f8CKQOm","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>aws-cesm1-le catalog with 56 dataset(s) from 442 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>variable</th>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>long_name</th>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>component</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>experiment</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>frequency</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>vertical_levels</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>spatial_domain</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>units</th>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>start_time</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>end_time</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>path</th>\n      <td>427</td>\n    </tr>\n    <tr>\n      <th>derived_variable</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"ePJRVmDXQT"}],"key":"mFO41AyWAs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog = intake.open_esm_datastore(\n    'https://ncar-cesm-lens.s3-us-west-2.amazonaws.com/catalogs/aws-cesm1-le.json'\n)\ncatalog","key":"X5IEnyBW6v"},{"type":"output","id":"DLes5Bbp6nDAnrdcMOLEm","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>aws-cesm1-le catalog with 56 dataset(s) from 442 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>variable</th>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>long_name</th>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>component</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>experiment</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>frequency</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>vertical_levels</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>spatial_domain</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>units</th>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>start_time</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>end_time</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>path</th>\n      <td>427</td>\n    </tr>\n    <tr>\n      <th>derived_variable</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"YQq6ByLNLX"}],"key":"kQM6Ejgt3R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog.df.to_csv('namelistCESM1.csv')\n","key":"tbbzUJVBW9"},{"type":"output","id":"AAOE35paGa0RaGDNf4gT1","data":[],"key":"KgjcglzvFi"}],"key":"gxOETae7JJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"","key":"rPZHM6FVoq"},{"type":"output","id":"ZxsAwEvNzj1_q4SFfA9V1","data":[],"key":"STUS3h5sWZ"}],"key":"KGkzn7zPIR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport numpy as np\nimport climdex.utils as cutils","key":"ygqHjSy0Sl"},{"type":"output","id":"l-7qw_LrkxzhTkgCyzfQI","data":[],"key":"wcbUSrCGnm"}],"key":"QBK1sGjSaY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import climdex.precipitation as pdex","key":"gG0mdl8FQR"},{"type":"output","id":"QfOYCQgE2ORFxRba51G5f","data":[],"key":"yM0WXSnkxx"}],"key":"qdE3FwqUwE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"indices = pdex.indices(time_dim='time')\n   # compute total monthly precipitation;\n   # your data should be daily or sub-daily time scale\n#ptot = indices.PRECC\nindices","key":"vcKQTVUa8c"},{"type":"output","id":"AXupn2NsPVVcVsIGFKqVI","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/plain":{"content":"<climdex.precipitation.PrecipitationIndices at 0x7f066efa4050>","content_type":"text/plain"}}}],"key":"EtmTiibAVe"}],"key":"PUe2fSNmXb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#indices = pdex.indices(time_dim='time')\n   # compute total monthly precipitation;\n   # your data should be daily or sub-daily time scale\n#ptot = indices.prcptot(data, period='1M')","key":"SGQd8FXzfW"},{"type":"output","id":"T_LtMSptxI440VMq8NPgc","data":[],"key":"HlIpJjZCTC"}],"key":"w7KxKCv281"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"","key":"rmo80C4Bwx"},{"type":"output","id":"E8g2rjzyoivj3t6aUM05c","data":[],"key":"jcZ4RrXgy5"}],"key":"JKF0eaz21i"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog_subset = catalog.search(variable='TREFHT', frequency='daily')\ncatalog_subset","key":"Ei3AVwN9iS"},{"type":"output","id":"YRtARqngIG7AndbN-GLUK","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>aws-cesm1-le catalog with 4 dataset(s) from 4 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>variable</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>long_name</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>component</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>experiment</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>frequency</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>vertical_levels</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>spatial_domain</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>units</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>start_time</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>end_time</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>path</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>derived_variable</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"nuyr7o4VCK"}],"key":"RLcwuFJVOg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog_subset.df\n","key":"fbod1MOi9J"},{"type":"output","id":"nyl2ryTx_wIlWVCX54Yoc","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"  variable                     long_name component experiment frequency  \\\n0   TREFHT  reference height temperature       atm        20C     daily   \n1   TREFHT  reference height temperature       atm       CTRL     daily   \n2   TREFHT  reference height temperature       atm       HIST     daily   \n3   TREFHT  reference height temperature       atm      RCP85     daily   \n\n   vertical_levels spatial_domain units           start_time  \\\n0              1.0         global     K  1920-01-01 12:00:00   \n1              1.0         global     K  0402-01-01 12:00:00   \n2              1.0         global     K  1850-01-01 12:00:00   \n3              1.0         global     K  2006-01-01 12:00:00   \n\n              end_time                                               path  \n0  2005-12-31 12:00:00  s3://ncar-cesm-lens/atm/daily/cesmLE-20C-TREFH...  \n1  2200-12-31 12:00:00  s3://ncar-cesm-lens/atm/daily/cesmLE-CTRL-TREF...  \n2  1919-12-31 12:00:00  s3://ncar-cesm-lens/atm/daily/cesmLE-HIST-TREF...  \n3  2100-12-31 12:00:00  s3://ncar-cesm-lens/atm/daily/cesmLE-RCP85-TRE...  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>variable</th>\n      <th>long_name</th>\n      <th>component</th>\n      <th>experiment</th>\n      <th>frequency</th>\n      <th>vertical_levels</th>\n      <th>spatial_domain</th>\n      <th>units</th>\n      <th>start_time</th>\n      <th>end_time</th>\n      <th>path</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>TREFHT</td>\n      <td>reference height temperature</td>\n      <td>atm</td>\n      <td>20C</td>\n      <td>daily</td>\n      <td>1.0</td>\n      <td>global</td>\n      <td>K</td>\n      <td>1920-01-01 12:00:00</td>\n      <td>2005-12-31 12:00:00</td>\n      <td>s3://ncar-cesm-lens/atm/daily/cesmLE-20C-TREFH...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>TREFHT</td>\n      <td>reference height temperature</td>\n      <td>atm</td>\n      <td>CTRL</td>\n      <td>daily</td>\n      <td>1.0</td>\n      <td>global</td>\n      <td>K</td>\n      <td>0402-01-01 12:00:00</td>\n      <td>2200-12-31 12:00:00</td>\n      <td>s3://ncar-cesm-lens/atm/daily/cesmLE-CTRL-TREF...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>TREFHT</td>\n      <td>reference height temperature</td>\n      <td>atm</td>\n      <td>HIST</td>\n      <td>daily</td>\n      <td>1.0</td>\n      <td>global</td>\n      <td>K</td>\n      <td>1850-01-01 12:00:00</td>\n      <td>1919-12-31 12:00:00</td>\n      <td>s3://ncar-cesm-lens/atm/daily/cesmLE-HIST-TREF...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>TREFHT</td>\n      <td>reference height temperature</td>\n      <td>atm</td>\n      <td>RCP85</td>\n      <td>daily</td>\n      <td>1.0</td>\n      <td>global</td>\n      <td>K</td>\n      <td>2006-01-01 12:00:00</td>\n      <td>2100-12-31 12:00:00</td>\n      <td>s3://ncar-cesm-lens/atm/daily/cesmLE-RCP85-TRE...</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"qYIZD8Rkke"}],"key":"xkbH8q3vFu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dsets = catalog_subset.to_dataset_dict(storage_options={'anon':True})\n","key":"FpHgWGNdG9"},{"type":"output","id":"HAYTq-e22JLj4fJSbJh_n","data":[{"output_type":"stream","name":"stdout","text":"\n--> The keys in the returned dictionary of datasets are constructed as follows:\n\t'component.experiment.frequency'\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"\n    <div>\n      <progress value='0' class='' max='4' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      \n    </div>\n    ","content_type":"text/html"}}}],"key":"CT7jnRTleH"}],"key":"YZjwObZVMB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#indices = pdex.indices(time_dim='time')\n   # compute total monthly precipitation;\n   # your data should be daily or sub-daily time scale\n#ptot = indices.TREFHT(data, period='1M')","key":"jX4s4kOkjD"},{"type":"output","id":"znubYNdrPc0Q7uT8tqLN_","data":[],"key":"SEwsRtYbD9"}],"key":"cC0kGaMWNj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dsets","key":"XwG89gHqW9"},{"type":"output","id":"Q4C3QGSruvxTJRD35zmqi","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"{'atm.HIST.daily': <xarray.Dataset> Size: 6GB\n Dimensions:    (time: 25550, lat: 192, lon: 288, nbnd: 2)\n Coordinates:\n   * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n   * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n     member_id  int64 8B ...\n   * time       (time) object 204kB 1850-01-01 12:00:00 ... 1919-12-31 12:00:00\n     time_bnds  (time, nbnd) object 409kB dask.array<chunksize=(12775, 2), meta=np.ndarray>\n Dimensions without coordinates: nbnd\n Data variables:\n     TREFHT     (time, lat, lon) float32 6GB dask.array<chunksize=(576, 192, 288), meta=np.ndarray>\n Attributes: (12/25)\n     Conventions:                       CF-1.0\n     NCO:                               4.4.2\n     Version:                           $Name$\n     important_note:                    This data is part of the project 'Blin...\n     initial_file:                      b.e11.B20TRC5CNBDRD.f09_g16.001.cam.i....\n     logname:                           mudryk\n     ...                                ...\n     intake_esm_attrs:units:            K\n     intake_esm_attrs:start_time:       1850-01-01 12:00:00\n     intake_esm_attrs:end_time:         1919-12-31 12:00:00\n     intake_esm_attrs:path:             s3://ncar-cesm-lens/atm/daily/cesmLE-H...\n     intake_esm_attrs:_data_format_:    zarr\n     intake_esm_dataset_key:            atm.HIST.daily,\n 'atm.20C.daily': <xarray.Dataset> Size: 278GB\n Dimensions:    (member_id: 40, time: 31390, lat: 192, lon: 288, nbnd: 2)\n Coordinates:\n   * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n   * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n   * member_id  (member_id) int64 320B 1 2 3 4 5 6 7 ... 35 101 102 103 104 105\n   * time       (time) object 251kB 1920-01-01 12:00:00 ... 2005-12-31 12:00:00\n     time_bnds  (time, nbnd) object 502kB dask.array<chunksize=(15695, 2), meta=np.ndarray>\n Dimensions without coordinates: nbnd\n Data variables:\n     TREFHT     (member_id, time, lat, lon) float32 278GB dask.array<chunksize=(1, 576, 192, 288), meta=np.ndarray>\n Attributes: (12/25)\n     Conventions:                       CF-1.0\n     NCO:                               4.4.2\n     Version:                           $Name$\n     important_note:                    This data is part of the project 'Blin...\n     initial_file:                      b.e11.B20TRC5CNBDRD.f09_g16.001.cam.i....\n     logname:                           mudryk\n     ...                                ...\n     intake_esm_attrs:units:            K\n     intake_esm_attrs:start_time:       1920-01-01 12:00:00\n     intake_esm_attrs:end_time:         2005-12-31 12:00:00\n     intake_esm_attrs:path:             s3://ncar-cesm-lens/atm/daily/cesmLE-2...\n     intake_esm_attrs:_data_format_:    zarr\n     intake_esm_dataset_key:            atm.20C.daily,\n 'atm.RCP85.daily': <xarray.Dataset> Size: 307GB\n Dimensions:    (member_id: 40, time: 34675, lat: 192, lon: 288, nbnd: 2)\n Coordinates:\n   * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n   * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n   * member_id  (member_id) int64 320B 1 2 3 4 5 6 7 ... 35 101 102 103 104 105\n   * time       (time) object 277kB 2006-01-01 12:00:00 ... 2100-12-31 12:00:00\n     time_bnds  (time, nbnd) object 555kB dask.array<chunksize=(17338, 2), meta=np.ndarray>\n Dimensions without coordinates: nbnd\n Data variables:\n     TREFHT     (member_id, time, lat, lon) float32 307GB dask.array<chunksize=(1, 576, 192, 288), meta=np.ndarray>\n Attributes: (12/26)\n     Conventions:                       CF-1.0\n     NCO:                               4.4.2\n     Version:                           $Name$\n     host:                              tcs-f02n07\n     important_note:                    This data is part of the project 'Blin...\n     initial_file:                      b.e11.B20TRC5CNBDRD.f09_g16.105.cam.i....\n     ...                                ...\n     intake_esm_attrs:units:            K\n     intake_esm_attrs:start_time:       2006-01-01 12:00:00\n     intake_esm_attrs:end_time:         2100-12-31 12:00:00\n     intake_esm_attrs:path:             s3://ncar-cesm-lens/atm/daily/cesmLE-R...\n     intake_esm_attrs:_data_format_:    zarr\n     intake_esm_dataset_key:            atm.RCP85.daily,\n 'atm.CTRL.daily': <xarray.Dataset> Size: 145GB\n Dimensions:    (member_id: 1, time: 656634, lat: 192, lon: 288, nbnd: 2)\n Coordinates:\n   * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n   * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n   * member_id  (member_id) int64 8B 1\n   * time       (time) object 5MB 0402-01-01 12:00:00 ... 2200-12-31 12:00:00\n     time_bnds  (time, nbnd) object 11MB dask.array<chunksize=(82080, 1), meta=np.ndarray>\n Dimensions without coordinates: nbnd\n Data variables:\n     TREFHT     (member_id, time, lat, lon) float32 145GB dask.array<chunksize=(1, 576, 192, 288), meta=np.ndarray>\n Attributes: (12/25)\n     Conventions:                       CF-1.0\n     NCO:                               4.3.4\n     Version:                           $Name$\n     case:                              b.e11.B1850C5CN.f09_g16.005\n     initial_file:                      /glade/p/cesm/cseg//inputdata/atm/cam/...\n     logname:                           mai\n     ...                                ...\n     intake_esm_attrs:units:            K\n     intake_esm_attrs:start_time:       0402-01-01 12:00:00\n     intake_esm_attrs:end_time:         2200-12-31 12:00:00\n     intake_esm_attrs:path:             s3://ncar-cesm-lens/atm/daily/cesmLE-C...\n     intake_esm_attrs:_data_format_:    zarr\n     intake_esm_dataset_key:            atm.CTRL.daily}","content_type":"text/plain"}}}],"key":"lfqIbskfC5"}],"key":"Maeq5ZbR8Y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dsets.keys()\n","key":"wb4zouRPGW"},{"type":"output","id":"i5uLBiZkiv-WlDl6P_hTZ","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"dict_keys(['atm.HIST.daily', 'atm.20C.daily', 'atm.RCP85.daily', 'atm.CTRL.daily'])","content_type":"text/plain"}}}],"key":"jW0HbIzkfM"}],"key":"Q8UXzos1CM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"historical = dsets['atm.HIST.daily']\n","key":"IoVLYMF4Me"},{"type":"output","id":"AUMW-H_EDqp4he1WDuWGH","data":[],"key":"TVo01evIn5"}],"key":"oN7wwjmW1V"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"historical","key":"jpFjsC8evV"},{"type":"output","id":"4RIUb0-2NKqv_0JjaK9Id","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"<xarray.Dataset> Size: 6GB\nDimensions:    (time: 25550, lat: 192, lon: 288, nbnd: 2)\nCoordinates:\n  * lat        (lat) float64 2kB -90.0 -89.06 -88.12 -87.17 ... 88.12 89.06 90.0\n  * lon        (lon) float64 2kB 0.0 1.25 2.5 3.75 ... 355.0 356.2 357.5 358.8\n    member_id  int64 8B ...\n  * time       (time) object 204kB 1850-01-01 12:00:00 ... 1919-12-31 12:00:00\n    time_bnds  (time, nbnd) object 409kB dask.array<chunksize=(12775, 2), meta=np.ndarray>\nDimensions without coordinates: nbnd\nData variables:\n    TREFHT     (time, lat, lon) float32 6GB dask.array<chunksize=(576, 192, 288), meta=np.ndarray>\nAttributes: (12/25)\n    Conventions:                       CF-1.0\n    NCO:                               4.4.2\n    Version:                           $Name$\n    important_note:                    This data is part of the project 'Blin...\n    initial_file:                      b.e11.B20TRC5CNBDRD.f09_g16.001.cam.i....\n    logname:                           mudryk\n    ...                                ...\n    intake_esm_attrs:units:            K\n    intake_esm_attrs:start_time:       1850-01-01 12:00:00\n    intake_esm_attrs:end_time:         1919-12-31 12:00:00\n    intake_esm_attrs:path:             s3://ncar-cesm-lens/atm/daily/cesmLE-H...\n    intake_esm_attrs:_data_format_:    zarr\n    intake_esm_dataset_key:            atm.HIST.daily","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"60cecfc2cadf30a31e528eb7bcc49939","path":"/climate-variability-cookbook/_preview/11/build/60cecfc2cadf30a31e528eb7bcc49939.html"}}}],"key":"NsrrHYCDJs"}],"key":"Kd0K24lctc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nplt.imshow(historical['TREFHT'].data[0], origin='lower')","key":"VUK51zOBSw"},{"type":"output","id":"-3zBzGwdpxrJe4t3HESdM","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"ffe14226b6ed3a15f5e8593bcc2b602d","path":"/climate-variability-cookbook/_preview/11/build/ffe14226b6ed3a15f5e8593bcc2b602d.png"}}}],"key":"aannROH6yj"}],"key":"LKYWEEHnzJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#plt.colorbar() # for the colorbar","key":"pIhnh2YmYV"},{"type":"output","id":"1I18-ujPnESuJ5DKwBvTF","data":[],"key":"gTU8VI7vVk"}],"key":"z7QATUUvLa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create sample data\ndata = np.random.rand(10, 10)\n\n# Create a plot with imshow\nplt.imshow(data, cmap='viridis')\nplt.colorbar() # Add a colorbar to the plot\nplt.title(\"Sample Data with Colorbar\")\nplt.show()\n","key":"a0LiaDVwJG"},{"type":"output","id":"jDEQRL-e1t1qgZXHYjur_","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"8a86a44de9e05d6f61c23fcc87bf922e","path":"/climate-variability-cookbook/_preview/11/build/8a86a44de9e05d6f61c23fcc87bf922e.png"}}}],"key":"TJ06H5xOeh"}],"key":"dpmfBq7xil"}],"key":"MKgXVo3sQh"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Climate Variability Cookbook","url":"/","group":"Climate Variability Cookbook"}}},"domain":"http://localhost:3000"}